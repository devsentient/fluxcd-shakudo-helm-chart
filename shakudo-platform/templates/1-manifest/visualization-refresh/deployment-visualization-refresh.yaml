apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: visualization-refresh
  name: visualization-refresh
  namespace: hyperplane-core
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: visualization-refresh
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: visualization-refresh
        release: hyperplane-{{ .Release.Revision }}
    spec:
      priorityClassName: shakudo-visualization-refresh
      nodeSelector: 
        {{.Values.nodeSelectorExpressions.key}}: {{.Values.nodeSelectorExpressions.value.hyperSys}}
      containers:
      - command:
        - node
        - ./dist/scheduler/cache/visualizationCache/refresh.js
        env:
        - name: HYPERPLANE__DEFAULT_NAMESPACE
          value: hyperplane-core
        - name: ISTIO_GATEWAY
          value: {{.Values.istio.gateway}}
        envFrom:
        - configMapRef:
            name: hyperplane-settings
        image: {{.Values.visualization.image}}
        imagePullPolicy: IfNotPresent
        name: visualization-refresh
        resources:
          limits:
            cpu: 1200m
            memory: 1Gi
          requests:
            cpu: "1"
            memory: 800Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      nodeSelector:
        {{.Values.nodeSelectorExpressions.key}}: {{.Values.nodeSelectorExpressions.value.hyperSys}}
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: hyperplane-operator
      serviceAccountName: hyperplane-operator
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: purpose
        operator: Equal
        value: api-server