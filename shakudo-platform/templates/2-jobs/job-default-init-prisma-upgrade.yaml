apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    batch.kubernetes.io/job-tracking: ""
    helm.sh/hook: post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
  name: init-prisma-upgrade-{{ .Release.Revision }}
  namespace: {{ .Values.defaultNamespace | default "hyperplane-core" | quote }}
spec:
  ttlSecondsAfterFinished: 600
  backoffLimit: 8
  template:
    metadata:
      name: init-prisma-upgrade-job
    spec:
      containers:
      - command:
        - /bin/sh
        - -c
        - yes "" | /usr/local/bin/npx prisma db push --preview-feature --force && /usr/local/bin/npx prisma db seed --preview-feature
        env:
        - name: PRISMA_DATASOURCE_DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: hyperplane-settings
              key: DATABASE_URL
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: hyperplane-settings
              key: DATABASE_URL
        - name: DEFAULT_GIT_REPO_REMOTE_SSH_URL
          value: {{ .Values.gitServer.repo }}
        - name: HYPERPLANE_GIT_BRANCH_NAME
          value: {{ .Values.gitServer.syncBranch }}
        - name: HYPERPLANE_CLIENT_NAME
          value: {{ .Values.clientName }}
        - name: HYPERPLANE__DASHBOARD__SHOW__GRAPHQL_APP
          value: {{ .Values.initialize.showGraphQLApp | default "true" | quote }}
        - name: HYPERPLANE__DASHBOARD__SHOW__GRAFANA_LOGS_APP
          value: {{ .Values.initialize.showGrafanaLogsApp | default "true" | quote }}
        - name: HYPERPLANE__DASHBOARD__SHOW__TRITON_DASHBOARD_APP
          value: {{ .Values.initialize.showTritonDashboardApp | default "false" | quote }}
        - name: HYPERPLANE__DASHBOARD__SHOW__DISTRIBUTED_WORKLOADS_DASHBOARD_APP
          value: {{ .Values.initialize.showDistributedWorkloadsDashboardApp | default "false" | quote }}
        - name: HYPERPLANE__DASHBOARD__SHOW__IMAGE_BUILD_APP
          value: {{ .Values.initialize.showImageBuildApp | default "false" | quote }}
        - name: HYPERPLANE__DASHBOARD__GRAFANA_URL
          value: "{{- if .Values.dashboard.apps.grafana.dashboardUrl }}{{ .Values.grafana.dashboardUrl }}{{- else }}https://grafana.{{ .Values.domain }}/d/85a562078cdf77779eaa1add43ccec1e/kubernetes-compute-resources-namespace-pods?orgId=1&refresh=10s&var-datasource=prometheus&var-cluster=&var-namespace={{ .Values.defaultNamespace }}{{- end }}"
        - name: HYPERPLANE__DASHBOARD__SHOW__SPECTAQL_DOCS_APP
          value: {{ .Values.initialize.showSpectaQLDocsApp | default "false" | quote }}
        image: {{.Values.apiServer.image}}
        imagePullPolicy: Always
        name: prisma-initializer
        workingDir: /app
      initContainers:
      - command:
        - /bin/sh
        - -c
        - until nc -zv $DB_HOST $DB_PORT -w1; do echo 'waiting for db'; sleep 1; done
        envFrom:
        - configMapRef:
            name: hyperplane-settings
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: hyperplane-settings
              key: DIRECT_DATABASE_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: hyperplane-settings
              key: DIRECT_DATABASE_PORT
        image: busybox:1.36
        imagePullPolicy: IfNotPresent
        name: wait-for-postgres
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      restartPolicy: Never
      serviceAccountName: gcr
